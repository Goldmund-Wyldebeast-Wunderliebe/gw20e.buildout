[buildout]
extends = 
    buildout-base.cfg
{% if zeo and zeo.base %}
    includes/zeo.cfg
{% endif %}
    includes/supervisor.cfg
{% if varnish %}
    includes/varnish.cfg
{% endif %}
{% if haproxy %}
    includes/haproxy.cfg
{% endif %}
{% if instances %}
    includes/logrotate.cfg
{% endif %}

eggs +=
    gww.imprint

{% if modules or third_party_modules %}
auto-checkout = *
always-checkout = true

extensions +=
    mr.developer
{% endif %}


# XXX todo: Crontab entries
# for instances:
#   0 6 * * * /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${buildout:directory}/${logrotate:output}
# for frontend and instances:
#   @reboot   ${buildout:directory}/bin/supervisord
# for backend
#   0 1 * * 6 ${buildout:directory}/bin/zeopack
# for backend, if not HA:
#   @reboot   ${buildout:directory}/bin/zeo start


{% if instances %}
parts +=
{% for instance, port in instances.ports.items() %}
    {{ instance }}
{% endfor %}
{% endif %}


{% if modules or third_party_modules %}
[sources]
{% for module, source in modules.items() %}
{{ module }} = {{ source }} {% if tag %}rev={{ tag }}{% endif %}
{% endfor %}

{% for module, source in third_party_modules.items() %}
{{ module }} = {{ source }}
{% endfor %}
{% endif %}

[supervisor]
programs +=
{% if instances %}
{% for instance, port in instances.ports.items() %}
    20 {{ instance }} ${buildout:directory}/bin/{{ instance }} [console] true
{% endfor %}
{% endif %}
{% if varnish %}
    60 varnish ${buildout:directory}/bin/varnish true
{% endif %}
{% if haproxy %}
    70 haproxy ${buildout:directory}/bin/haproxy [-f ${buildout:directory}/etc/haproxy.conf -db] true
{% endif %}


{% if varnish %}
[varnish]
port = {{ varnish.port }}
{% endif %}


{% if haproxy %}
[haproxy-conf]
port = {{ haproxy.port }}

{% if haproxy.instances %}
{% set haproxy_instances = haproxy.instances %}
{% else %}
{% set haproxy_instances = instances %}
{% endif %}
auth-backends =
{% for name, ip in haproxy_instances.ipaddresses.items() %}
{% for instance, port in haproxy_instances.ports.items() %}
    server  {{ name }}-{{ instance }} {{ ip }}:{{ port }} cookie {{ name }}-{{ instance }} check inter 2000 maxconn 2 rise 1
{% endfor %}
{% endfor %}

anon-backends = 
    ${:auth-backends}
{% endif %}


{% if instances %}
[instance]
username = {{ credentials.username }}
password = {{ credentials.password }}
user = {{ credentials.username }}:{{ credentials.password }}


[instance-base]
recipe = collective.recipe.zope2cluster
instance-clone = instance
{% if zeo %}
zeo-client = on
zeo-address = {% if zeo.ip %}{{ zeo.ip }}{% else %}127.0.0.1{% endif %}:{{ zeo.port }}
{% endif %}
{% if sentry %}
event-log-custom =
    %import raven.contrib.zope
    <logfile>
      path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
      level INFO
    </logfile>
    <sentry>
      dsn {{ sentry.dsn }}
      level {{ sentry.level }}
    </sentry>
{% endif %}


{% for instance, port in instances.ports.items() %}
[{{ instance }}]
<= instance-base
http-address = {{ port }}
environment-vars =
    buildout_imprint_env {{ env }}
    buildout_imprint_appenv {{ appenv }}
    buildout_imprint_instance {{ instance }}
    buildout_imprint_date {{ now.strftime('%Y-%m-%d') }}
    buildout_imprint_time {{ now.strftime('%H:%M') }}
{% endfor %}
{% endif %}


{% if zeo and zeo.base %}
[zeo]
zeo-address = {% if zeo.ip %}{{ zeo.ip }}{% else %}127.0.0.1{% endif %}:{{ zeo.port }}
file-storage = {{ zeo.base }}/filestorage/Data.fs
blob-storage = {{ zeo.base }}/blobstorage
{% endif %}

